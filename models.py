from sqlalchemy import Column, Integer, BigInteger, String, Enum as PgEnum, ForeignKey
from db_base import Base  # –£–±–µ–¥–∏—Å—å, —á—Ç–æ Base –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∏–∑ –æ–±—â–µ–≥–æ –º–æ–¥—É–ª—è db_base
import enum

# üë§ –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
class UserRole(enum.Enum):
    admin = "admin"
    user = "user"

# üë§ –ú–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class User(Base):
    __tablename__ = "users"

    id = Column(Integer, primary_key=True)
    tg_id = Column(BigInteger, unique=True, nullable=False)
    name = Column(String, nullable=True)  # –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    phone = Column(String, nullable=True)  # —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    role = Column(PgEnum(UserRole), nullable=False, default=UserRole.user)

# üì¶ –°—Ç–∞—Ç—É—Å –æ–±—ä–µ–∫—Ç–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
class PropertyStatus(enum.Enum):
    available = "–í –ø—Ä–æ–¥–∞–∂–µ"
    sold = "–ü—Ä–æ–¥–∞–Ω–æ"
    price_changed = "–°–Ω–∏–∂–µ–Ω–∏–µ/–ü–æ–≤—ã—à–µ–Ω–∏–µ —Ü–µ–Ω—ã"
    removed = "–°–Ω—è—Ç–æ —Å –ø—Ä–æ–¥–∞–∂–∏"

# üè† –ú–æ–¥–µ–ª—å –æ–±—ä–µ–∫—Ç–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
class Property(Base):
    __tablename__ = "properties"

    id = Column(Integer, primary_key=True)
    title = Column(String, nullable=False)
    description = Column(String)
    status = Column(PgEnum(PropertyStatus), default=PropertyStatus.available)
    created_by = Column(BigInteger, ForeignKey("users.tg_id"), nullable=False)  # ID —Å–æ–∑–¥–∞—Ç–µ–ª—è
